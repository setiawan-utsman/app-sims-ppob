{"version":3,"file":"static/js/190.a9517f27.chunk.js","mappings":"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","sources":["app/page/Auth/Register/SignupPage.tsx","app/services/api.service.ts","app/services/main.service.ts","styles/styled/flex.styled.ts"],"sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { DFlexColumn, DFlex } from '../../../../styles/styled/flex.styled'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { postRequest } from '../../../services/main.service'\r\nimport axios from 'axios'\r\nimport { get } from 'lodash'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport default function SignupPage() {\r\n    const source = axios.CancelToken.source()\r\n    const navigate = useNavigate()\r\n    const formRef = useRef<any>({})\r\n    const [errors, setErrors] = useState<any>({});\r\n\r\n    const handleSignIn = () => {\r\n        navigate('/signin')\r\n    }\r\n\r\n    const onRegister = () => {\r\n        if (validateForm()) {\r\n            const listKey = [\"email\", \"first_name\", \"last_name\", \"password\"];\r\n            let objParams: any = {}\r\n\r\n            listKey?.map((obj: any) => {\r\n                objParams[obj] = formRef.current[obj]?.value\r\n            })\r\n            serviceRegister(objParams)\r\n            console.log(objParams)\r\n        }\r\n\r\n    }\r\n\r\n    const serviceRegister = async (params: any) => {\r\n        await new Promise((resolve) => setTimeout(resolve, 300))\r\n        try {\r\n            const req = await postRequest({ path: `https://take-home-test-api.nutech-integrasi.com/registration`, params, sourceToken: source.token })\r\n            console.log(req);\r\n           navigate('/signin')\r\n        } catch (e) {\r\n            const message = get(e, 'response.data.message')\r\n            toast.error(message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n                });\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const errors: any = {};\r\n        const listKey = [\"email\", \"first_name\", \"last_name\", \"password\", \"password_konfirmasi\"];\r\n        listKey?.map((obj: any) => {\r\n            if (!Boolean(formRef.current[obj]?.value)) {\r\n                if ([\"first_name\", \"last_name\", \"password\", \"email\"].includes(obj)) {\r\n                    errors[obj] = `Wajib di isi!`\r\n                }\r\n            } else if (obj === \"email\") {\r\n                const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; \r\n\r\n                if (!emailRegex.test(formRef.current[obj].value)) {\r\n                    errors[obj] = \"Harus dalam format email yang benar!\";\r\n                }\r\n            } else if (obj === \"password_konfirmasi\") {\r\n                const password = formRef.current[\"password\"]?.value;\r\n                const passwordKonfirmasi = formRef.current[obj].value;\r\n                if (password !== passwordKonfirmasi) {\r\n                  errors[obj] = \"Password konfirmasi harus sama dengan password!\";\r\n                }\r\n              }\r\n        })\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    }\r\n\r\n    return (\r\n        <Row className='g-0'>\r\n            <Col md={6}>\r\n                <Row className='vh-100 d-flex justify-content-center align-items-center'>\r\n                    <Col md={5}>\r\n                        <DFlexColumn className='w-100'>\r\n                            <DFlex className='gap-3 align-items-center justify-content-center w-100'>\r\n                                <div><img src=\"\\static\\logo.png\" alt=\"\" /></div>\r\n                                <div className='fw-500'>SIMS PPOB</div>\r\n                            </DFlex>\r\n                            <div className='fs-20 lh-sm text-center w-100 fw-500 my-3'>Masuk atau buat akun untuk memulai</div>\r\n                            <DFlexColumn className='w-100 gap-3'>\r\n                                <div className='w-100'>\r\n                                    <Form.Control type=\"email\" className='fs-12' placeholder=\"Masukan email anda\"\r\n                                        ref={(el: any) => (formRef.current[`email`] = el)} onChange={validateForm} isInvalid={!!errors?.email} />\r\n                                    {/* <Form.Control.Feedback className='fs-10' type=\"invalid\">{errors?.email}</Form.Control.Feedback> */}\r\n                                </div>\r\n\r\n                                <Form.Control type=\"text\" className='fs-12' placeholder=\"Nama depan\"\r\n                                    ref={(el: any) => (formRef.current[`first_name`] = el)} onChange={validateForm} isInvalid={!!errors?.first_name}/>\r\n                                    {/* <Form.Control.Feedback className='fs-10' type=\"invalid\">{errors?.first_name}</Form.Control.Feedback> */}\r\n\r\n                                \r\n                                <Form.Control type=\"text\" className='fs-12' placeholder=\"Nama Belakang\"\r\n                                    ref={(el: any) => (formRef.current[`last_name`] = el)} onChange={validateForm} isInvalid={!!errors?.last_name}/>\r\n                                <Form.Control type=\"password\" className='fs-12' placeholder=\"Buat password anda\"\r\n                                    ref={(el: any) => (formRef.current[`password`] = el)} onChange={validateForm} isInvalid={!!errors?.password}/>\r\n                                <div className='w-100'>\r\n                                <Form.Control type=\"password\" className='fs-12' placeholder=\"Konfirmasi password anda\"\r\n                                    ref={(el: any) => (formRef.current[`password_konfirmasi`] = el)} isInvalid={!!errors?.password_konfirmasi}/>\r\n                                  <Form.Control.Feedback className='fs-10' type=\"invalid\">{errors?.password_konfirmasi}</Form.Control.Feedback>\r\n                                </div>\r\n                               \r\n                            </DFlexColumn>\r\n\r\n                            <Button variant='danger' className='w-100' onClick={onRegister}>Register</Button>\r\n                            <div className='mt-4 text-center fs-12 w-100'>\r\n                                Sudah punya akun? Login <span className='fw-500 text-danger cursor-pointer' onClick={handleSignIn}>di sini</span>\r\n                            </div>\r\n                        </DFlexColumn>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col md={6}>\r\n                <div style={{ height: \"100vh\" }}><img className='w-100 h-100' src=\"\\static\\IllustrasiLogin.png\" alt=\"\" /></div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import axios from \"axios\"\r\nimport { pick, replace } from 'lodash'\r\nimport store from \"../../store\"\r\n\r\nconst requestApi = (responseFields: any = null, baseUrl = undefined) => {\r\n    let sourceRequest: any = {}\r\n  \r\n    /** CREATE AXIOS INSTANCE */\r\n    const axiosInstance = axios.create({\r\n      baseURL: baseUrl ? baseUrl : process.env.API_BASE_URL,\r\n    })\r\n  \r\n    /** HANDLE AXIOS REQUEST */\r\n    // axiosInstance.interceptors.request.use(async (config: any) => {\r\n    //   // Removed Bearer token logic\r\n    //   return config\r\n    // })\r\n\r\n    axiosInstance.interceptors.request.use(async (config: any) => {\r\n      const { credentials } = store.getState().auth\r\n  \r\n      if (credentials?.access) {\r\n        config.headers.Authorization = `Bearer ${credentials.access}`\r\n      }\r\n  \r\n      return config\r\n    })\r\n  \r\n    axiosInstance.interceptors.request.use((request: any) => {\r\n      // If the application exists cancel\r\n      if (sourceRequest[request.url]) {\r\n        sourceRequest[request.url].cancel('Automatic cancellation')\r\n      }\r\n      return request\r\n    })\r\n  \r\n    /** HANDLE AXIOS RESPONSE */\r\n    axiosInstance.interceptors.response.use(\r\n      (resp) => {\r\n        if (responseFields) return pick(resp, responseFields)\r\n        return resp?.data\r\n      },\r\n      async (error) => {\r\n        const originalConfig = error.config\r\n  \r\n        // if (originalConfig?.url !== process.env.API_MAIN_SERVICE + '/v1/auth/login' && error.response) {\r\n        //   if (originalConfig?.method == 'get' && error.response.status !== 401) {\r\n        //     // const notification = notificationTemplate(error?.message, 'danger')\r\n        //     // const respMsg = error.response?.data?.message ? replace(error.response?.data?.message, 'Page', 'Path') : ''\r\n        //     // let msg1 = error.message ? `${respMsg}` : ''\r\n        //     // msg1 = msg1 ? msg1 : 'Oops... Something not working properly.'\r\n        //     // store.dispatch(\r\n        //     //   addNotification({\r\n        //     //     ...notification,\r\n        //     //     title: `Error ${error.response.status}`,\r\n        //     //     message: [msg1],\r\n        //     //     type: 'danger',\r\n        //     //   }),\r\n        //     // )\r\n        //   }\r\n        // }\r\n  \r\n        return Promise.reject(error)\r\n      },\r\n    )\r\n    return axiosInstance\r\n  }\r\n\r\nexport default requestApi\r\n","import requestApi from \"./api.service\"\r\n\r\nconst postRequest = ({ path, params, sourceToken }: any) => {\r\n    return requestApi().post(\r\n      `${path}`,\r\n      params,\r\n      { cancelToken: sourceToken }, // <-- IMPORTANT!\r\n    )\r\n  }\r\n\r\n  const getAll = (path: any = null, params: any = {}, sourceToken: any) => {\r\n    return requestApi().request({\r\n      url: path,\r\n      method: 'GET',\r\n      params: params,\r\n      cancelToken: sourceToken, // <-- IMPORTANT!\r\n    })\r\n  }\r\n\r\n  export { postRequest, getAll }","import styled from \"styled-components\";\r\n\r\nconst DFlex = styled.div`\r\n  display: flex !important;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`\r\n\r\nconst DFlexColumn = styled(DFlex)`\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`\r\n\r\n\r\nexport {DFlex, DFlexColumn}\r\n"],"names":["SignupPage","source","axios","CancelToken","navigate","useNavigate","formRef","useRef","errors","setErrors","useState","serviceRegister","async","Promise","resolve","setTimeout","req","postRequest","path","params","sourceToken","token","console","log","e","message","get","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","validateForm","listKey","map","obj","_formRef$current$obj2","Boolean","current","value","test","_formRef$current$pass","includes","Object","keys","length","_jsxs","Row","className","children","_jsx","Col","md","DFlexColumn","DFlex","src","alt","Form","Control","type","placeholder","ref","el","onChange","isInvalid","email","first_name","last_name","password","password_konfirmasi","Feedback","Button","variant","onClick","onRegister","objParams","_formRef$current$obj","handleSignIn","style","height","responseFields","arguments","baseUrl","sourceRequest","axiosInstance","create","baseURL","process","API_BASE_URL","interceptors","request","use","credentials","store","getState","auth","access","config","headers","Authorization","url","cancel","response","resp","pick","data","reject","_ref","requestApi","post","cancelToken","getAll","method","styled","div"],"sourceRoot":""}